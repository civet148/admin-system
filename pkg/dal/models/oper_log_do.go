// Code generated by db2go. DO NOT EDIT.
// https://github.com/civet148/sqlca

package models

const TableNameOperLog = "oper_log" //

const (
	OPER_LOG_COLUMN_ID           = "id"
	OPER_LOG_COLUMN_OPER_USER    = "oper_user"
	OPER_LOG_COLUMN_OPER_TYPE    = "oper_type"
	OPER_LOG_COLUMN_OPER_TIME    = "oper_time"
	OPER_LOG_COLUMN_OPER_CONTENT = "oper_content"
	OPER_LOG_COLUMN_CREATED_TIME = "created_time"
	OPER_LOG_COLUMN_UPDATED_TIME = "updated_time"
)

type OperLogDO struct {
	Id          int32  `json:"id" db:"id" bson:"_id"`                                               //自增ID
	OperUser    string `json:"oper_user" db:"oper_user" bson:"oper_user"`                           //操作用户
	OperType    int8   `json:"oper_type" db:"oper_type" bson:"oper_type"`                           //操作类型(1=首页 2=系统管理 3=存储管理 4=资源管理 5=告警中心)
	OperTime    string `json:"oper_time" db:"oper_time" bson:"oper_time"`                           //操作时间
	OperContent string `json:"oper_content" db:"oper_content" bson:"oper_content"`                  //操作内容
	CreatedTime string `json:"created_time" db:"created_time" sqlca:"readonly" bson:"created_time"` //创建时间
	UpdatedTime string `json:"updated_time" db:"updated_time" sqlca:"readonly" bson:"updated_time"` //更新时间
}

func (do *OperLogDO) GetId() int32            { return do.Id }
func (do *OperLogDO) SetId(v int32)           { do.Id = v }
func (do *OperLogDO) GetOperUser() string     { return do.OperUser }
func (do *OperLogDO) SetOperUser(v string)    { do.OperUser = v }
func (do *OperLogDO) GetOperType() int8       { return do.OperType }
func (do *OperLogDO) SetOperType(v int8)      { do.OperType = v }
func (do *OperLogDO) GetOperTime() string     { return do.OperTime }
func (do *OperLogDO) SetOperTime(v string)    { do.OperTime = v }
func (do *OperLogDO) GetOperContent() string  { return do.OperContent }
func (do *OperLogDO) SetOperContent(v string) { do.OperContent = v }
func (do *OperLogDO) GetCreatedTime() string  { return do.CreatedTime }
func (do *OperLogDO) SetCreatedTime(v string) { do.CreatedTime = v }
func (do *OperLogDO) GetUpdatedTime() string  { return do.UpdatedTime }
func (do *OperLogDO) SetUpdatedTime(v string) { do.UpdatedTime = v }

/*
CREATE TABLE `oper_log` (
  `id` int NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `oper_user` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '操作用户',
  `oper_type` tinyint(1) NOT NULL COMMENT '操作类型(1=首页 2=系统管理 3=存储管理 4=资源管理 5=告警中心)',
  `oper_time` timestamp NOT NULL COMMENT '操作时间',
  `oper_content` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '操作内容',
  `created_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `updated_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci ROW_FORMAT=DYNAMIC;
*/
